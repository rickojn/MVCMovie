@model MVCMovie.Models.Movie

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "priceInput" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="ratingDiv" class="form-group" style="display:block">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="/Scripts/jquery-3.3.1.js"></script>
<script>
    $(document).ready(function () {

        var validationTable = [
            {
                condition: { priceInput: 5 },
                hiddenFields: ["#ratingDiv"]
            }
        ];
        //changed
        alert("hello!");
       // $("div#ratingDiv").css({ display: "none" });
        $("#priceInput").change(function () {
            //if ($("#priceInput").val() == 5) {
            //    $("div#ratingDiv").css({ display: "none" });
            //}
            //else {
            //    $("div#ratingDiv").css({ display: "block" });
            //}
            $("input").each(function () {
                console.log(this.id);
                console.log(this.value);
                console.log(this.style)
                var inputField = this;
                validationTable.forEach(function (item) {
                    console.log(item.condition["priceInput"]);
                    console.log("condition", item.condition[inputField.id]);
                    console.log($(item.hiddenFields[0]));
                    console.log($("#ratingDiv"));
                    if (item.condition[inputField.id] && inputField.value === item.condition[inputField.id].toString()) {
                        console.log("equal!:  ", $(item.hiddenFields[0]));
                        $(item.hiddenFields[0]).css({ display: "none" });
                    }
                })
            })
        })
    })
</script>

